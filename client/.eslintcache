[{"/Users/Pick6/Desktop/Chatty/client/src/index.js":"1","/Users/Pick6/Desktop/Chatty/client/src/reportWebVitals.js":"2","/Users/Pick6/Desktop/Chatty/client/src/App.js":"3","/Users/Pick6/Desktop/Chatty/client/src/Chat/Chat.js":"4","/Users/Pick6/Desktop/Chatty/client/src/Chat/ChatWindow/ChatWindow.js":"5","/Users/Pick6/Desktop/Chatty/client/src/Chat/ChatInput/ChatInput.js":"6","/Users/Pick6/Desktop/Chatty/client/src/Chat/ChatWindow/Message/Message.js":"7"},{"size":500,"mtime":1607323571909,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607323571910,"results":"10","hashOfConfig":"9"},{"size":200,"mtime":1607324210814,"results":"11","hashOfConfig":"9"},{"size":1830,"mtime":1607324162588,"results":"12","hashOfConfig":"9"},{"size":366,"mtime":1607323896304,"results":"13","hashOfConfig":"9"},{"size":1353,"mtime":1607323790831,"results":"14","hashOfConfig":"9"},{"size":261,"mtime":1607323856651,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"yb09l3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},"/Users/Pick6/Desktop/Chatty/client/src/index.js",[],["36","37"],"/Users/Pick6/Desktop/Chatty/client/src/reportWebVitals.js",[],"/Users/Pick6/Desktop/Chatty/client/src/App.js",["38"],"﻿import React from 'react';\nimport Chat from './Chat/Chat';\n\nfunction App() {\n    return (\n        <div style={{ margin: '0 30%' }}>\n            <Chat />\n        </div>\n    );\n}\n\nexport default App;","/Users/Pick6/Desktop/Chatty/client/src/Chat/Chat.js",["39"],"﻿import React, { useState, useEffect, useRef } from 'react';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\n\nimport ChatWindow from './ChatWindow/ChatWindow';\nimport ChatInput from './ChatInput/ChatInput';\n\nconst Chat = () => {\n    const [connection, setConnection] = useState(null);\n    const [chat, setChat] = useState([]);\n    const latestChat = useRef(null);\n\n    latestChat.current = chat;\n\n    useEffect(() => {\n        const newConnection = new HubConnectionBuilder()\n            .withUrl('https://localhost:5001/hubs/chat')\n            .withAutomaticReconnect()\n            .build();\n\n        setConnection(newConnection);\n    }, []);\n\n    useEffect(() => {\n        if (connection) {\n            connection.start()\n                .then(result => {\n                    console.log('Connected!');\n\n                    connection.on('ReceiveMessage', message => {\n                        const updatedChat = [...latestChat.current];\n                        updatedChat.push(message);\n\n                        setChat(updatedChat);\n                    });\n                })\n                .catch(e => console.log('Connection failed: ', e));\n        }\n    }, [connection]);\n\n    const sendMessage = async (user, message) => {\n        const chatMessage = {\n            user: user,\n            message: message\n        };\n\n        if (connection.connectionStarted) {\n            try {\n                await connection.send('SendMessage', chatMessage);\n            }\n            catch (e) {\n                console.log(e);\n            }\n        }\n        else {\n            alert('No connection to server yet.');\n        }\n    }\n\n    return (\n        <div>\n            <ChatInput sendMessage={sendMessage} />\n            <hr />\n            <ChatWindow chat={chat} />\n        </div>\n    );\n};\n\nexport default Chat;","/Users/Pick6/Desktop/Chatty/client/src/Chat/ChatWindow/ChatWindow.js",["40"],"﻿import React from 'react';\n\nimport Message from './Message/Message';\n\nconst ChatWindow = (props) => {\n    const chat = props.chat\n        .map(m => <Message\n            key={Date.now() * Math.random()}\n            user={m.user}\n            message={m.message} />);\n\n    return (\n        <div>\n            {chat}\n        </div>\n    )\n};\n\nexport default ChatWindow;","/Users/Pick6/Desktop/Chatty/client/src/Chat/ChatInput/ChatInput.js",["41"],"﻿import React, { useState } from 'react';\n\nconst ChatInput = (props) => {\n    const [user, setUser] = useState('');\n    const [message, setMessage] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const isUserProvided = user && user !== '';\n        const isMessageProvided = message && message !== '';\n\n        if (isUserProvided && isMessageProvided) {\n            props.sendMessage(user, message);\n        }\n        else {\n            alert('Please insert an user and a message.');\n        }\n    }\n\n    const onUserUpdate = (e) => {\n        setUser(e.target.value);\n    }\n\n    const onMessageUpdate = (e) => {\n        setMessage(e.target.value);\n    }\n\n    return (\n        <form\n            onSubmit={onSubmit}>\n            <label htmlFor=\"user\">User:</label>\n            <br />\n            <input\n                id=\"user\"\n                name=\"user\"\n                value={user}\n                onChange={onUserUpdate} />\n            <br />\n            <label htmlFor=\"message\">Message:</label>\n            <br />\n            <input\n                type=\"text\"\n                id=\"message\"\n                name=\"message\"\n                value={message}\n                onChange={onMessageUpdate} />\n            <br /><br />\n            <button>Submit</button>\n        </form>\n    )\n};\n\nexport default ChatInput;","/Users/Pick6/Desktop/Chatty/client/src/Chat/ChatWindow/Message/Message.js",["42"],"﻿import React from 'react';\n\nconst Message = (props) => (\n    <div style={{ background: \"#eee\", borderRadius: '5px', padding: '0 10px' }}>\n        <p><strong>{props.user}</strong> says:</p>\n        <p>{props.message}</p>\n    </div>\n);\n\nexport default Message;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","messageId":"50","fix":"51"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","messageId":"50","fix":"52"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","messageId":"50","fix":"53"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","messageId":"50","fix":"54"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","messageId":"50","fix":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"58","text":"59"},{"range":"60","text":"59"},{"range":"61","text":"59"},{"range":"62","text":"59"},{"range":"63","text":"59"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0]]